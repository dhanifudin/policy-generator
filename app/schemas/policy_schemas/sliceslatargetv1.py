# generated by datamodel-codegen:
#   filename:  policy_schema_slice_sla_target.json
#   timestamp: 2022-11-16T03:56:34+00:00

from __future__ import annotations

from typing import Any, List, Optional, Union

from pydantic import BaseModel, Extra, conint, constr


class SliceSlaObjectives(BaseModel):
    class Config:
        extra = Extra.forbid

    maxNumberOfUes: Optional[float] = None
    maxNumberOfPduSessions: Optional[float] = None
    guaDlThptPerSlice: Optional[float] = None
    maxDlThptPerSlice: Optional[float] = None
    maxDlThptPerUe: Optional[float] = None
    guaUlThptPerSlice: Optional[float] = None
    maxUlThptPerSlice: Optional[float] = None
    maxUlThptPerUe: Optional[float] = None


class NcI(BaseModel):
    __root__: conint(ge=0, le=68719476735)


class EcI(BaseModel):
    __root__: conint(ge=0, le=268435455)


class PlmnId(BaseModel):
    class Config:
        extra = Extra.forbid

    mcc: constr(regex=r'^[0-9]{3}$')
    mnc: constr(regex=r'^[0-9]{2,3}$')


class TaI(BaseModel):
    class Config:
        extra = Extra.forbid

    plmnId: PlmnId
    tac: constr(regex=r'^[A-Fa-f0-9]{6}$')


class TaIList(BaseModel):
    __root__: List[TaI]


class SliceId(BaseModel):
    class Config:
        extra = Extra.forbid

    sst: conint(ge=0, le=255)
    sd: Optional[constr(regex=r'^[A-Fa-f0-9]{6}$')] = None
    plmnId: PlmnId


class CIdItem(BaseModel):
    class Config:
        extra = Extra.forbid

    ncI: NcI


class CIdItem1(BaseModel):
    class Config:
        extra = Extra.forbid

    ecI: EcI


class CId(BaseModel):
    __root__: Union[CIdItem, CIdItem1]


class Scope(BaseModel):
    class Config:
        extra = Extra.forbid

    sliceId: SliceId


class Model(BaseModel):
    class Config:
        extra = Extra.forbid

    scope: Scope
    sliceSlaObjectives: SliceSlaObjectives
    sliceSlaResources: Optional[Union[Any, Any]] = None


class CellId(BaseModel):
    class Config:
        extra = Extra.forbid

    plmnId: PlmnId
    cId: CId


class CellIdList(BaseModel):
    __root__: List[CellId]
